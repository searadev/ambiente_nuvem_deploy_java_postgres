1-Associe o repositório do GitHub ao Sonar Cloud como projeto:
    a:No GitHub vá em Settings/Applications/Terraform Cloud Configure
    b:Select repositories
    c:Selecione o repositório
    d:Save
2-No Sonar Cloud crie uma Organization
    a:Create Organization
    b:Escolha o repositório do projeto do GitHub
3-Em Administration/Set New Code Definition escolha a opção: Previus Version
4-Em Administration/Analysis Method desligue o SonarCloud Automatic Analysis, pois iremos analisar o código via GitHub Applications
5-Em Administration/General Settings/Languages escolher Java
6-Configurar o token do Sonar no GitHub Actions
    a:No Sonar Cloud ir em: Administration/Analysis Method/GitHub Actions/Follow the tutorial
    b:Copiar o Name SONAR_TOKEN
    c:Copiar o Value Field com o valor do Token
    d:Ir para o GitHub
    e:Abrir o projeto
    f:Ir para: Settings/Secrets/Actions
    g:New repository secret
    h:Name --> SONAR_TOKEN
    i:Value --> Colar o valor copiado do Value Field do Sonar Cloud
    j:Add secret
7-Voltar para o Sonar Cloud e clicar em Continue
8-Clicar em Maven
9-No Visual Studio Code, criar uma nova branch: feature/SonarCloud
10-No arquivo pipeline.yml
    a:Incluir o cache do Sonar antes do cache do Maven

        - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
        
    b:Incluir o Build e Analyze depois do build do Maven

        - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=searadev_seara-backend

11-No arquivo pom.xml incluir o Sonar:

        <properties>
            <sonar.organization>searadev</sonar.organization>
            <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        </properties>

